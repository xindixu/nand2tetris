// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // 3 way or to determine if we need to change value of the register
    Or(a=inc, b=load, out=incOrLoad);
    Or(a=incOrLoad, b=reset, out=change);

    // preference: reset > load > inc
    // order of mux: inc -> load -> reset

    // eg. even value is altered in `load`, `reset` step will still make it back to 0 if `reset` == 1
    // eg. even value is altered in `inc`, `load` step will still make it load in `in` if `load` == 1
    Inc16(in=outLoop, out=incremented);
    Mux16(a=in, b=incremented, sel=inc, out=afterInc);
    Mux16(a=afterInc, b=in, sel=load, out=afterLoad);
    Mux16(a=afterLoad, b=false, sel=reset, out=afterReset);

    Register(in=afterReset, load=change, out=out, out=outLoop);
}
